{"version":3,"sources":["webpack:///./src/state/gyroscope.js","webpack:///./src/pages/page-2.js"],"names":["AxisControl","axis","deg","control","state","started","Date","now","clocks","GyroController","props","_this2","_React$Component","call","this","deviceOrientationHandler","e","absolute","alpha","beta","gamma","console","log","which","arg","testVal","gammaAxis","Math","round","startingPoint","threshold","pos","document","getElementById","innerHTML","thresholds","reorient","setState","componentWillUnmount","window","removeEventListener","componentDidMount","addEventListener","render","react_default","a","createElement","id","children","React","Component","SecondPage","gyroscope"],"mappings":"sIAEaA,EAAc,SAACC,EAAMC,EAAKC,IACH,gBAAxBC,MAAMC,QAAQJ,IAAoBK,KAAKC,eAAWH,MAAMC,QAAQJ,YAAYG,MAAMI,OAAOP,KAE/FE,EAAQF,IA2ECQ,cArEb,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAChBA,EAAAC,EAAAC,KAAAC,aAmCFC,yBAAyB,SAACC,GACiBA,EAAjCC,SAAiCD,EAAvBE,MAAuBF,EAAhBG,KAAgBH,EAAVI,MAC/BC,QAAQC,IAAIN,GAIZ,IAAcO,EAEKC,EADXC,EAKRd,EAAKe,UAAU1B,EAAY,SANbuB,EAM0B,QALhCE,EAAUE,KAAKC,OAAQ,IAAMZ,EAAEO,GAAOZ,EAAKP,MAAMyB,cAAcN,IAAQ,IAAK,IACjEC,EACGC,EADKd,EAAKP,MAAM0B,UAAUP,GAAO,GAAKC,EAAMb,EAAKP,MAAM0B,UAAUP,GAAO,GAC7DE,EAAU,GAGM,SAAAM,GAC/CV,QAAQC,IAAIpB,KACZ8B,SAASC,eAAe,WAAWC,UAAnC,OAAsDhC,KAFzCF,IA9CfW,EAAKP,MAAM,CACT+B,WAAY,CACVjB,MAAO,EAAE,GAAI,IACbC,KAAM,EAAE,GAAI,IACZC,MAAO,EAAE,GAAI,KAEff,QAAS,CACPa,MAAO,KACPC,KAAM,KACNC,MAAO,MAETZ,OAAQ,CACNU,MAAO,IACPC,KAAM,IACNC,MAAO,KAETS,cAAc,MAlBAlB,sCAqBlByB,SAAA,SAASpB,GACPF,KAAKuB,SAAS,CACZR,cAAc,CACZX,MAAMS,KAAKC,MAAMZ,EAAEE,OACnBC,KAAMQ,KAAKC,MAAMZ,EAAEG,MACnBC,MAAOO,KAAKC,MAAMZ,EAAEI,QAEtBf,QAAS,CACPa,MAAO,KACPC,KAAM,KACNC,MAAO,IAAId,WAsBjBgC,qBAAA,WACEC,OAAOC,oBAAoB,oBAAqB1B,KAAKC,0BAA0B,MAEjF0B,kBAAA,WACEF,OAAOG,iBAAiB,oBAAqB5B,KAAKC,0BAA0B,MAE9E4B,OAAA,WACE,OACEC,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,OAAKC,GAAG,WAAR,cACEjC,KAAKJ,MAAMsC,cAhEUC,IAAMC,WC0CpBC,UAjDI,kBACjBP,EAAAC,EAAAC,cAACM,EAAD,KACER,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA","file":"component---src-pages-page-2-js-f55dcedc2ab7fbb7c4c4.js","sourcesContent":["import React from 'react'\n\nexport const AxisControl = (axis, deg, control) => {\n  if ((this.state.started[axis] === null) || (Date.now()-this.state.started[axis])<this.state.clocks[axis]){\n    // if(deg!==0){\n      control(axis)\n    // }\n  }\n}\n\nclass GyroController extends React.Component {\n  constructor(props){\n    super();\n    this.state={\n      thresholds: {\n        alpha: [-45, 45],\n        beta: [-45, 45],\n        gamma: [-45, 45],\n      },\n      started: {\n        alpha: null,\n        beta: null,\n        gamma: null,\n      },\n      clocks: {\n        alpha: 10000,\n        beta: 10000,\n        gamma: 1000,\n      },\n      startingPoint:null,\n    }\n  }\n  reorient(e){\n    this.setState({\n      startingPoint:{\n        alpha:Math.round(e.alpha),\n        beta: Math.round(e.beta),\n        gamma: Math.round(e.gamma),\n      },\n      started: {\n        alpha: null,\n        beta: null,\n        gamma: new Date(),\n      },\n    })\n  }\n\n  deviceOrientationHandler=(e)=>{\n    const { absolute, alpha, beta, gamma } = e;\n    console.log(e)\n    // if(this.state.startingPoint===null){\n    //   this.reorient(e)\n    // }\n    const zero = (which) =>{\n      const testVal = Math.round(((450 + e[which]-this.state.startingPoint[which])%180)-90);\n      const testFunc = arg => (this.state.threshold[which][0] < arg < this.state.threshold[which][1]);\n      const no = testFunc(testVal) ? testVal : 0;\n      return no;\n    }\n    this.gammaAxis=AxisControl('gamma',zero('gamma'),pos => {\n      console.log(deg);\n      document.getElementById('zeroVal').innerHTML = `DEG=${deg}`\n    })()\n  }\n  componentWillUnmount(){\n    window.removeEventListener('deviceorientation', this.deviceOrientationHandler, true);\n  }\n  componentDidMount(){\n    window.addEventListener('deviceorientation', this.deviceOrientationHandler, true);\n  }\n  render() {\n    return (\n      <main>\n      <div id=\"zeroVal\">value here</div>\n      { this.props.children }\n      </main>\n    )\n  }\n}\n\nexport default GyroController\n\n//\n//\n// function deviceOrientationHandler(e){\n//   if(window.startingPoint===null){\n//     reorient(e);\n//     document.getElementById('based').innerHTML = `\n//     S.A: ${window.startingPoint.alpha},\n//     S.B: ${window.startingPoint.beta},\n//     S.G: ${(window.startingPoint.gamma - 90) % 180}`;\n//   }\n//   var threshold=15;\n//   let alphaString='';\n//   let betaString='';\n//   let gammaString='';\n//   let multiple = 0;\n//   if(Math.abs(zero(e,'alpha'))>threshold){\n//     multiple = Math.min(Math.floor(zero(e,'alpha')/threshold),3)*threshold;\n//     document.querySelector('#alphaDiv').classList=`bg${multiple}`;\n//   }else{\n//     document.querySelector('#alphaDiv').classList=[];\n//   }\n//   if(Math.abs(zero(e,'beta'))>threshold){\n//     betaString=`;${threshold} and ${zero(e,'beta')}`;\n//     multiple = Math.min(Math.floor(zero(e,'beta')/threshold),3)*threshold;\n//     document.querySelector('#betaDiv').classList=`bg${multiple}`;\n//   }else{\n//     document.querySelector('#betaDiv').classList=[];\n//   }\n//   if(Math.abs(zero(e,'gamma', true))>threshold){\n//     gammaString=`;${threshold} and ${zero(e,'gamma', true)}`;\n//     multiple = Math.max(0,Math.min(Math.floor(zero(e,'gamma',true)/threshold),3)*threshold);\n//     document.querySelector('#gammaDiv').classList=`bg${multiple}`;\n//   }else{\n//     document.querySelector('#gammaDiv').classList=[];\n//   }\n//   document.getElementById('updated').innerHTML = `\n//   A: ${calibrateMe(Math.round(e.alpha))};\n//   B: ${calibrateMe(Math.round(e.beta))};\n//   G: ${calibrateMe(Math.round(e.gamma),90)}`;\n//   document.getElementById('difference').innerHTML = `\n//   D.A: ${zero(e,'alpha')}, ${alphaString}\n//   D.B: ${zero(e,'beta')}, ${betaString}\n//   D.G: ${zero(e,'gamma', true)} ${gammaString}`;\n// }\n","import React from 'react'\nimport GyroController from '../state/gyroscope'\n\nconst SecondPage = () => (\n  <GyroController>\n    <h1>Hi from the second page</h1>\n    <p>Welcome to page 2</p>\n  </GyroController>\n)\n//\n// return (\n//   <StaticQuery\n//     query={graphql`\n//       query{\n//         allCountry{\n//           edges{\n//             node{\n//               name\n//               nativeName\n//               code\n//               latlng\n//               borders\n//             }\n//           }\n//         }\n//       }\n//     `}\n//     render={data => (\n//       <>\n//         <Helmet\n//           title={}\n//           meta={[\n//             { name: 'description', content: 'Kevin Ready is a developer, musician and adventurist.' },\n//             { name: 'keywords', content: 'freelance,react,node,javascript,contractor,developer' },\n//             // { name: 'Access-Control-Request-Headers', content: 'Accept,Access-Control-Allow-Origin' },\n//             // { name: 'Access-Control-Allow-Origin', content: '*' },\n//           ]}\n//         >\n//           <html lang=\"en\" />\n//           <meta name=\"theme-color\" content=\"#000000\" />\n//           <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n//           <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\n//           <meta name=\"description\" content=\"Kevin Ready | Creativist\" />\n//         </Helmet>\n//         {content}\n//       </>\n//     )}\n//   />\n// )\n// }\n//\n//\nexport default SecondPage\n"],"sourceRoot":""}