{"version":3,"sources":["webpack:///./src/state/gyroscope.js","webpack:///./src/pages/page-2.js"],"names":["GyroController","props","_this","_React$Component","call","this","onCompassAxis","e","Math","round","alpha","state","orientation","onUpDownAxis","arg","val","onSideToSideAxis","deorient","window","removeEventListener","deviceOrientationHandler","reorient","setState","startingPoint","started","beta","gamma","Date","addEventListener","absolute","testPosition","orientationChangeHandler","console","log","upDownTest","floor","document","querySelector","innerHTML","bind","assertThisInitialized_default","componentWillUnmount","componentDidMount","render","react_default","a","createElement","className","onClick","id","children","React","Component","SecondPage","gyroscope"],"mappings":"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","file":"component---src-pages-page-2-js-a20ca66c0408b2a944b9.js","sourcesContent":["import React from 'react'\n\nclass GyroController extends React.Component {\n  constructor(props){\n    super(props);\n    this.deviceOrientationHandler=this.deviceOrientationHandler.bind(this)\n    this.state={\n      orientation: 0,\n      startingPoint:null,\n    }\n  }\n  onCompassAxis = e => {\n    return Math.round(e.alpha+this.state.orientation) % 360\n  }\n  onUpDownAxis = e => {\n    const arg = this.state.orientation === 0 ? 'beta' : 'gamma'\n    let val =  Math.round(((450 + e[arg])%360))\n    return val > 90 ? val - 180 : val\n  }\n  onSideToSideAxis = e => {\n    const arg = this.state.orientation === 0 ? 'gamma' : 'beta'\n    let val =  Math.round(((450 + e[arg])%360)-90)\n    return val > 90 ? val - 180 : val\n  }\n  deorient = e => {\n    window.removeEventListener('deviceorientation', this.deviceOrientationHandler, false);\n  }\n  reorient = e => {\n    this.setState({\n      startingPoint:null,\n      started: {\n        alpha: null,\n        beta: null,\n        gamma: new Date(),\n      },\n    })\n    window.addEventListener('deviceorientation', this.deviceOrientationHandler, false);\n  }\n\n  deviceOrientationHandler = e => {\n    const { alpha, beta, gamma, absolute } = e;\n    if(this.state.startingPoint){\n      this.testPosition(e)\n    }else{\n      const startingPoint = { alpha, beta, gamma, absolute }\n      this.setState({ startingPoint })\n    }\n  }\n\n  orientationChangeHandler = e => {\n    console.log(window.orientation)\n    this.setState({\n      orientation: window.orientation\n    })\n  }\n\n  upDownTest = val => {\n    const rtnVal = Math.floor(val/10);\n    return rtnVal;\n  }\n\n  testPosition=(e)=>{\n    console.log(`testPosition(${this.upDownTest(this.onUpDownAxis(e))})`)\n    document.querySelector('#zeroVal').innerHTML=`Compass:\n    ${this.onCompassAxis(e)}, UD:\n    ${this.onUpDownAxis(e)}, Spin:\n    ${this.onSideToSideAxis(e)}}\n    `;\n  }\n  componentWillUnmount(){\n    window.removeEventListener('deviceorientation', this.deviceOrientationHandler, true);\n    window.removeEventListener('orientationchange', this.orientationChangeHandler, true);\n  }\n  componentDidMount(){\n    window.addEventListener('orientationchange', this.orientationChangeHandler, true);\n  }\n  render() {\n    return (\n      <main>\n      <div className=\"allCoords\">\n        <div onClick={this.reorient} className=\"coord alpha\">\n        1A ({ this.state.startingPoint ? Math.round(this.state.startingPoint['alpha']) : 0 })\n        </div>\n        <div className=\"coord beta\">\n        1B ({ this.state.startingPoint ? Math.round(this.state.startingPoint['beta']) : 0 })\n        </div>\n        <div onClick={this.deorient} className=\"coord gamma\">\n        1G ({ this.state.startingPoint ? Math.round(this.state.startingPoint['gamma']) : 0 })\n        </div>\n      </div>\n      <div id=\"zeroVal\">click, here</div>\n      { this.props.children }\n      </main>\n    )\n  }\n}\n\nexport default GyroController\n","import React from 'react'\nimport GyroController from '../state/gyroscope'\n\nconst SecondPage = () => (\n  <GyroController>\n    <h1>II</h1>\n    <p>This is gyroscope test</p>\n  </GyroController>\n)\n//\n// return (\n//   <StaticQuery\n//     query={graphql`\n//       query{\n//         allCountry{\n//           edges{\n//             node{\n//               name\n//               nativeName\n//               code\n//               latlng\n//               borders\n//             }\n//           }\n//         }\n//       }\n//     `}\n//     render={data => (\n//       <>\n//         <Helmet\n//           title={}\n//           meta={[\n//             { name: 'description', content: 'Kevin Ready is a developer, musician and adventurist.' },\n//             { name: 'keywords', content: 'freelance,react,node,javascript,contractor,developer' },\n//             // { name: 'Access-Control-Request-Headers', content: 'Accept,Access-Control-Allow-Origin' },\n//             // { name: 'Access-Control-Allow-Origin', content: '*' },\n//           ]}\n//         >\n//           <html lang=\"en\" />\n//           <meta name=\"theme-color\" content=\"#000000\" />\n//           <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n//           <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\n//           <meta name=\"description\" content=\"Kevin Ready | Creativist\" />\n//         </Helmet>\n//         {content}\n//       </>\n//     )}\n//   />\n// )\n// }\n//\n//\nexport default SecondPage\n"],"sourceRoot":""}