{"version":3,"sources":["webpack:///./src/state/gyroscope.js","webpack:///./src/pages/page-2.js"],"names":["GyroController","props","_this","_React$Component","call","this","onCompassAxis","e","Math","round","alpha","state","orientation","onUpDownAxis","arg","window","onSideToSideAxis","deorient","removeEventListener","deviceOrientationHandler","reorient","setState","startingPoint","started","beta","gamma","Date","addEventListener","absolute","testPosition","orientationChangeHandler","console","log","actionableValue","axis","val","document","querySelector","innerHTML","bind","assertThisInitialized_default","thresholds","clocks","componentWillUnmount","componentDidMount","render","react_default","a","createElement","className","onClick","id","children","React","Component","SecondPage","gyroscope"],"mappings":"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","file":"component---src-pages-page-2-js-66dbcd5ba62dbb74d4ef.js","sourcesContent":["import React from 'react'\n\nclass GyroController extends React.Component {\n  constructor(props){\n    super(props);\n    this.deviceOrientationHandler=this.deviceOrientationHandler.bind(this)\n    this.state={\n      orientation: 0,\n      thresholds: {\n        alpha: [-45, 45],\n        beta: [-45, 45],\n        gamma: [-45, 45],\n      },\n      started: {\n        alpha: null,\n        beta: null,\n        gamma: null,\n      },\n      clocks: {\n        alpha: 10000,\n        beta: 10000,\n        gamma: 10000,\n      },\n      startingPoint:null,\n    }\n  }\n  onCompassAxis = e => {\n    return Math.round(e.alpha+this.state.orientation) % 360\n  }\n  onUpDownAxis = e => {\n    const arg = this.state.orientation === 0 ? 'beta' : 'gamma'\n    return window.orientation + Math.round(((450 + e[arg])%180))\n  }\n  onSideToSideAxis = e => {\n    const arg = this.state.orientation === 0 ? 'gamma' : 'beta'\n    return window.orientation + Math.round(((450 + e[arg])%180)-90)\n  }\n  deorient = e => {\n    window.removeEventListener('deviceorientation', this.deviceOrientationHandler, false);\n  }\n  reorient = e => {\n    this.setState({\n      startingPoint:null,\n      started: {\n        alpha: null,\n        beta: null,\n        gamma: new Date(),\n      },\n    })\n    window.addEventListener('deviceorientation', this.deviceOrientationHandler, false);\n  }\n\n  deviceOrientationHandler = e => {\n    const { alpha, beta, gamma, absolute } = e;\n    if(this.state.startingPoint){\n      this.testPosition(e)\n    }else{\n      // console.log(e)\n      const startingPoint = { alpha, beta, gamma, absolute }\n      this.setState({ startingPoint })\n    }\n  }\n\n  orientationChangeHandler = e => {\n    console.log(window.orientation)\n    this.setState({\n      orientation: window.orientation\n    })\n  }\n\n      // const testVal = Math.round(((450 + e[which]-this.state.startingPoint[which])%180)-90);\n      // const testFunc = arg => (this.state.threshold[which][0] < arg < this.state.threshold[which][1]);\n\n  actionableValue = (axis, val) => {\n    return this.state.startingPoint ?\n    Math.round(((450 + val-this.state.startingPoint[axis])%180)-90)\n    : 0;\n  }\n\n  testPosition=(e)=>{\n    document.querySelector('#zeroVal').innerHTML=`Compass:\n    ${this.onCompassAxis(e)}, For-Back:\n    ${this.onUpDownAxis(e)}, Spin:\n    ${this.onSideToSideAxis(e)}}\n    `;\n  }\n  // olddeviceOrientationHandler=(e)=>{\n  //   axisControl = (axis, deg, control) => {\n  //       // if(deg!==0){\n  //         control(axis)\n  //       // }\n  //     }\n  //   }\n  //\n  //\n  //   const { absolute, alpha, beta, gamma } = e;\n  //   console.log(e)\n  //   // if(this.state.startingPoint===null){\n  //   //   this.reorient(e)\n  //   // }\n  //   const zero = (which) =>{\n  //     const testVal = Math.round(((450 + e[which]-this.state.startingPoint[which])%180)-90);\n  //     const testFunc = arg => (this.state.threshold[which][0] < arg < this.state.threshold[which][1]);\n  //     const no = testFunc(testVal) ? testVal : 0;\n  //     return no;\n  //   }\n  //   this.axisControl('gamma',zero('gamma'),pos => {\n  //     console.log(deg);\n  //     document.getElementById('zeroVal').innerHTML = `DEG=${deg}`\n  //   })()\n  // }\n  componentWillUnmount(){\n    window.removeEventListener('deviceorientation', this.deviceOrientationHandler, true);\n    window.removeEventListener('orientationchange', this.orientationChangeHandler, true);\n  }\n  componentDidMount(){\n    window.addEventListener('orientationchange', this.orientationChangeHandler, true);\n  }\n  render() {\n    return (\n      <main>\n      <div className=\"allCoords\">\n        <div onClick={this.reorient} className=\"coord alpha\">\n        A ({ this.state.startingPoint ? Math.round(this.state.startingPoint['alpha']) : 0 })\n        </div>\n        <div className=\"coord beta\">\n        B ({ this.state.startingPoint ? Math.round(this.state.startingPoint['beta']) : 0 })\n        </div>\n        <div onClick={this.deorient} className=\"coord gamma\">\n        G ({ this.state.startingPoint ? Math.round(this.state.startingPoint['gamma']) : 0 })\n        </div>\n      </div>\n      <div id=\"zeroVal\">click, here</div>\n      { this.props.children }\n      </main>\n    )\n  }\n}\n\nexport default GyroController\n\n//\n//\n// function deviceOrientationHandler(e){\n//   if(window.startingPoint===null){\n//     reorient(e);\n//     document.getElementById('based').innerHTML = `\n//     S.A: ${window.startingPoint.alpha},\n//     S.B: ${window.startingPoint.beta},\n//     S.G: ${(window.startingPoint.gamma - 90) % 180}`;\n//   }\n//   var threshold=15;\n//   let alphaString='';\n//   let betaString='';\n//   let gammaString='';\n//   let multiple = 0;\n//   if(Math.abs(zero(e,'alpha'))>threshold){\n//     multiple = Math.min(Math.floor(zero(e,'alpha')/threshold),3)*threshold;\n//     document.querySelector('#alphaDiv').classList=`bg${multiple}`;\n//   }else{\n//     document.querySelector('#alphaDiv').classList=[];\n//   }\n//   if(Math.abs(zero(e,'beta'))>threshold){\n//     betaString=`;${threshold} and ${zero(e,'beta')}`;\n//     multiple = Math.min(Math.floor(zero(e,'beta')/threshold),3)*threshold;\n//     document.querySelector('#betaDiv').classList=`bg${multiple}`;\n//   }else{\n//     document.querySelector('#betaDiv').classList=[];\n//   }\n//   if(Math.abs(zero(e,'gamma', true))>threshold){\n//     gammaString=`;${threshold} and ${zero(e,'gamma', true)}`;\n//     multiple = Math.max(0,Math.min(Math.floor(zero(e,'gamma',true)/threshold),3)*threshold);\n//     document.querySelector('#gammaDiv').classList=`bg${multiple}`;\n//   }else{\n//     document.querySelector('#gammaDiv').classList=[];\n//   }\n//   document.getElementById('updated').innerHTML = `\n//   A: ${calibrateMe(Math.round(e.alpha))};\n//   B: ${calibrateMe(Math.round(e.beta))};\n//   G: ${calibrateMe(Math.round(e.gamma),90)}`;\n//   document.getElementById('difference').innerHTML = `\n//   D.A: ${zero(e,'alpha')}, ${alphaString}\n//   D.B: ${zero(e,'beta')}, ${betaString}\n//   D.G: ${zero(e,'gamma', true)} ${gammaString}`;\n// }\n","import React from 'react'\nimport GyroController from '../state/gyroscope'\n\nconst SecondPage = () => (\n  <GyroController>\n    <h1>II</h1>\n    <p>This is gyroscope test</p>\n  </GyroController>\n)\n//\n// return (\n//   <StaticQuery\n//     query={graphql`\n//       query{\n//         allCountry{\n//           edges{\n//             node{\n//               name\n//               nativeName\n//               code\n//               latlng\n//               borders\n//             }\n//           }\n//         }\n//       }\n//     `}\n//     render={data => (\n//       <>\n//         <Helmet\n//           title={}\n//           meta={[\n//             { name: 'description', content: 'Kevin Ready is a developer, musician and adventurist.' },\n//             { name: 'keywords', content: 'freelance,react,node,javascript,contractor,developer' },\n//             // { name: 'Access-Control-Request-Headers', content: 'Accept,Access-Control-Allow-Origin' },\n//             // { name: 'Access-Control-Allow-Origin', content: '*' },\n//           ]}\n//         >\n//           <html lang=\"en\" />\n//           <meta name=\"theme-color\" content=\"#000000\" />\n//           <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n//           <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\n//           <meta name=\"description\" content=\"Kevin Ready | Creativist\" />\n//         </Helmet>\n//         {content}\n//       </>\n//     )}\n//   />\n// )\n// }\n//\n//\nexport default SecondPage\n"],"sourceRoot":""}